function read_attributes(obj)
% reads the attributes of the measurement file such as the comments,
% substrate used and instrument settings  
% modify this file if new attributes are added in the experiment software
% all attributes currently defined in settings folder only 

settingsinfo = h5info(obj.fname, '/settings'); 
instrumentfolders = {settingsinfo.Groups.Name}; 

instruments = cell(1,length(instrumentfolders));
for ii = 1:length(instruments) 
    instruments{ii} = erase(instrumentfolders{ii}, ...
        '/settings/'); 
    switch instruments{ii}

        case 'general'
            obj.experiment =  h5readatt(obj.fname, ...
                '/settings/general', 'experiment');
            obj.sample = h5readatt(obj.fname, ...
                '/settings/general', 'sample');
            obj.comment = h5readatt(obj.fname, ...
                '/settings/general', 'comment');
            obj.substrate = h5readatt(obj.fname, ...
                '/settings/general', 'substrate');
            obj.filters.neutral_density = h5readatt(obj.fname, ...
                '/settings/general', 'filter_nd'); 
            obj.filters.longpass = h5readatt(obj.fname, ...
                '/settings/general', 'filter_longpass'); 
            obj.filters.longpass = h5readatt(obj.fname, ...
                '/settings/general', 'filter_bandpass'); 

        case 'digitizer'
            obj.digitizer.model = h5readatt(obj.fname, ...
                '/settings/digitizer', 'model');
            obj.digitizer.active_channels = h5readatt(obj.fname, ...
                '/settings/digitizer', 'active_channels');
            obj.digitizer.post_trigger_size = h5readatt(obj.fname, ...
                 '/settings/digitizer', 'post_trigger_size');
            obj.digitizer.sample_rate = h5readatt(obj.fname, ...
               '/settings/digitizer', 'samplerate');
            obj.digitizer.samples = h5readatt(obj.fname, ...
               '/settings/digitizer', 'samples');
            obj.digitizer.pulses = h5readatt(obj.fname, ...
                '/settings/digitizer', 'pulses'); 
            obj.digitizer.dc_offset = h5readatt(obj.fname, ...
                '/settings/digitizer', 'dc_offset'); 
            obj.digitizer.jitter_channel = h5readatt(obj.fname, ...
                '/settings/digitizer', 'jitter_channel'); 
            obj.digitizer.jitter_correction = h5readatt(obj.fname, ...
                '/settings/digitizer', 'jitter_correction'); 
            obj.digitizer.measurement_mode = h5readatt(obj.fname, ...
                '/settings/digitizer', 'measurement_mode'); 
            obj.digitizer.single_photon_counting_treshold = ... 
                h5readatt(obj.fname, '/settings/digitizer', ...
                'single_photon_counting_treshold'); 
          
        case 'spectrometer'
            obj.spectrometer.fiber = 'not implemented yet'; 
            obj.spectrometer.integration_time = h5readatt(obj.fname, ...
                '/settings/spectrometer', 'integrationtime');
            obj.spectrometer.averageing = h5readatt(obj.fname, ...
                '/settings/spectrometer', 'average_measurements');
            obj.spectrometer.model = h5readatt(obj.fname, ...
                 '/settings/spectrometer', 'spectrometer');

        case 'xystage' 
            obj.xystage.xnum = h5readatt(obj.fname, ...
                 '/settings/xystage', 'xnum');
            obj.xystage.ynum = h5readatt(obj.fname, ...
                 '/settings/xystage', 'ynum');
            obj.xystage.offset_bottom = h5readatt(obj.fname, ...
                 '/settings/xystage', 'offset_bottom');
            obj.xystage.offset_top = h5readatt(obj.fname, ...
                 '/settings/xystage', 'offset_top');
            obj.xystage.offset_left = h5readatt(obj.fname, ...
                 '/settings/xystage', 'offset_left');
            obj.xystage.offset_right = h5readatt(obj.fname, ...
                 '/settings/xystage', 'offset_right');
            obj.xystage.sample_height = h5readatt(obj.fname, ...
                 '/settings/xystage', 'sample_height');
            obj.xystage.sample_height_effective = h5readatt(obj.fname, ...
                 '/settings/xystage', 'sample_height_effective');
            obj.xystage.sample_width = h5readatt(obj.fname, ...
                 '/settings/xystage', 'sample_width');
            obj.xystage.sample_width_effective = h5readatt(obj.fname, ...
                 '/settings/xystage', 'sample_width_effective');

        case 'laser'
            obj.laser.wlnum = h5readatt(obj.fname, ...
                 '/settings/laser', 'wlnum');
            obj.laser.energy_level = h5readatt(obj.fname, ...
                '/settings/laser', 'energylevel');
            
        case 'powermeter'
            obj.powermeter.integration_time = h5readatt(obj.fname, ...
                 '/settings/powermeter', 'integrationtime');
            obj.powermeter.sensor = h5readatt(obj.fname, ...
                 '/settings/powermeter', 'sensor');
            obj.powermeter.sensor_calibration_date = h5readatt(obj.fname, ...
                 '/settings/powermeter', 'sensor_calibration_date');
            obj.powermeter.sensor_serial_number = h5readatt(obj.fname, ...
                '/settings/powermeter', 'sensor_serial_number');  
    end
end

end

